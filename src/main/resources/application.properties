spring.session.store-type=none

spring.thymeleaf.mode=LEGACYHTML5

server.port = 8080

#server.port: 8443
#server.ssl.key-store: src/main/resources/keystore.p12
#server.ssl.key-store-password: Secret1
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: ren-laptop

#spring.view.prefix: /WEB-INF/views/jsp/
#spring.view.suffix: .jsp

#spring.mvc.view.prefix: /WEB-INF/jsp/
#spring.mvc.view.suffix: .jsp

spring.http.multipart.max-file-size=128KB
spring.http.multipart.max-request-size=128KB

#logging.level.o.s.web.servlet=DEBUG
logging.level.org.springframework.web.servlet.view=DEBUG

#server.context-path=/

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/trantor?useSSL=true

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Username and password
spring.datasource.username = tom
spring.datasource.password = Secret1

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# JPA / HIBERNATE
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create-drop

# Naming strategy
#spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57InnoDBDialect

###################

#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext










